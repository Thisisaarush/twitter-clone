{"version":3,"sources":["assets/twitter.png","assets/Logo.png","components/profilepic.jsx","styles/globalstyles.js","firebase/firebase.jsx","components/navbar.jsx","components/twitterReplyWidget.jsx","components/trendingbar.jsx","assets/loading.svg","assets/background.png","assets/twitterbig.svg","pages/signuppage.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["ProfileStyle","styled","div","ProfilePic","src","ProfileIcon","alt","GlobalStyles","createGlobalStyle","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","displayName","email","createdAt","Date","set","alert","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithRedirect","Navigation","NavLinks","Linked","Link","SpanStyle","span","HomeIcon","Home","HashIcon","Hash","NotificationsIcon","Notifications","MailOutlineIcon","MailOutline","BookmarkIcon","Bookmark","ListIcon","List","PersonIcon","Person","MoreHorizontalIcon","MoreHorizontal","SignOutIcon","SignOut","NavBar","currentUser","to","TwitterLogo","onClick","signOut","Basic","Tweet","tweetId","TrendingStyle","InputStyle","Heading","Trend","TrendingBar","type","placeholder","SignUpStyle","SignupLeft","SignupRight","FormStyle","form","SignUp","useState","setDisplayName","setEmail","password","setPassword","confirmPassword","setConfirmPassword","useEffect","document","title","handleSubmit","event","preventDefault","createUserWithEmailAndPassword","user","className","BgSignup","TwitterBig","TwitterIcon","onSubmit","htmlFor","value","onChange","target","id","required","HomePage","React","lazy","ProfilePage","ExplorePage","NotificationPage","MessagesPage","BookmarkPage","ListPage","WelcomePage","AppStyle","ImageStyle","App","isLoading","setLoading","setTimeout","setCurrentUser","onAuthStateChanged","onSnapshot","snapShot","data","useLocation","pathname","LoadingAnim","exact","path","fallback","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c7b5eba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.89498832.png\";","export default __webpack_public_path__ + \"static/media/Logo.78af5a0e.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProfileIcon from '../assets/Logo.png';\r\n\r\nconst ProfilePic = () => {\r\n  return (\r\n    <ProfileStyle>\r\n      <img src={ProfileIcon} alt=\"User Profile\" />\r\n    </ProfileStyle>\r\n  );\r\n}\r\n\r\n// styled components\r\nconst ProfileStyle = styled.div`\r\n  img {\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-right: 15px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default ProfilePic;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n\r\n`;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA-6b0RawcbYKOTp0ZC-kYuyE_muYpEYIs\",\r\n  authDomain: \"twitter-clone-71ffe.firebaseapp.com\",\r\n  projectId: \"twitter-clone-71ffe\",\r\n  storageBucket: \"twitter-clone-71ffe.appspot.com\",\r\n  messagingSenderId: \"1089873237631\",\r\n  appId: \"1:1089873237631:web:2d9f12e8ca24178165d14a\",\r\n  measurementId: \"G-6VQSP591TF\"\r\n};\r\n\r\n// firestore\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      alert('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n\r\n// google signin\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ProfilePic from \"./profilepic\";\r\n\r\nimport TwitterLogo from \"../assets/twitter.png\";\r\nimport { Home } from \"@styled-icons/boxicons-solid/Home\";\r\nimport { Hash } from \"@styled-icons/boxicons-regular/Hash\";\r\nimport { Notifications } from \"@styled-icons/material-outlined/Notifications\";\r\nimport { MailOutline } from \"@styled-icons/material/MailOutline\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-regular/Bookmark\";\r\nimport { List } from \"@styled-icons/fluentui-system-filled/List\";\r\nimport { Person } from \"@styled-icons/bootstrap/Person\";\r\nimport { MoreHorizontal } from \"@styled-icons/fluentui-system-filled/MoreHorizontal\";\r\nimport { SignOut } from '@styled-icons/octicons/SignOut';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from '../firebase/firebase';\r\n\r\nconst NavBar = ({ currentUser }) => {\r\n  return (\r\n    <Navigation>\r\n      <NavLinks>\r\n        <Linked to='/home'>\r\n          <img src={TwitterLogo} alt=\"twitter clone\" />\r\n        </Linked>\r\n        <Linked to='/home'>\r\n          <HomeIcon />\r\n          <p>Home</p>\r\n        </Linked>\r\n        <Linked to='/explore'>\r\n          <HashIcon />\r\n          <p>Explore</p>\r\n        </Linked>\r\n        <Linked to='/notifications'>\r\n          <NotificationsIcon />\r\n          <p>Notifications</p>\r\n        </Linked>\r\n        <Linked to='messages'>\r\n          <MailOutlineIcon />\r\n          <p>Messages</p>\r\n        </Linked>\r\n        <Linked to='bookmarks'>\r\n          <BookmarkIcon />\r\n          <p>Bookmarks</p>\r\n        </Linked>\r\n        <Linked to='lists'>\r\n          <ListIcon />\r\n          <p>Lists</p>\r\n        </Linked>\r\n        <Linked to=\"/profile\">\r\n          <PersonIcon />\r\n          <p>Profile</p>\r\n        </Linked>\r\n        <Linked to='/home'>\r\n          <MoreHorizontalIcon />\r\n          <p>More</p>\r\n        </Linked>\r\n\r\n        {\r\n          currentUser ?\r\n          <Linked to='/' onClick={() => auth.signOut()}> <SignOutIcon /> Sign Out</Linked>\r\n          :\r\n          <Linked to='/' > <SignOutIcon /> Sign In</Linked>\r\n        }\r\n\r\n        <button>Tweet</button>\r\n\r\n        <SpanStyle>\r\n          <ProfilePic />\r\n          <span>\r\n            <h4>Aarush Tanwar</h4>\r\n            <h5>@Thisisaarush</h5>\r\n          </span>\r\n        </SpanStyle>\r\n      </NavLinks>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\n// styled components\r\nconst Navigation = styled.div`\r\n  min-width: 270px;\r\n  max-width: 270px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  user-select: none;\r\n`;\r\nconst NavLinks = styled.div`\r\n  width: 270px;\r\n  height: 100vh;\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n\r\n  button {\r\n    width: max-content;\r\n    padding: 1rem 5.5rem;\r\n    background: #1d9bf0;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 34px;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    margin-top: 0.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Linked = styled(Link)`\r\n  \r\n  \r\n    width: max-content;\r\n    padding: 0.8rem 0.8rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    p {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    &:hover {\r\n      background: #3331;\r\n      border-radius: 34px;\r\n    }\r\n  \r\n`;\r\n\r\nconst SpanStyle = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  padding: 0.5rem 0.75rem;\r\n  padding-right: 3rem;\r\n\r\n  span {\r\n    margin-left: -5px;\r\n\r\n    h4 {\r\n      font-size: 15px;\r\n    }\r\n    h5 {\r\n      font-size: 15px;\r\n      color: #3339;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #3332;\r\n    border-radius: 34px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// icons\r\nconst HomeIcon = styled(Home)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst HashIcon = styled(Hash)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst NotificationsIcon = styled(Notifications)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst MailOutlineIcon = styled(MailOutline)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst BookmarkIcon = styled(Bookmark)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst ListIcon = styled(List)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst PersonIcon = styled(Person)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst MoreHorizontalIcon = styled(MoreHorizontal)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst SignOutIcon = styled(SignOut)`\r\n  width: 28px;\r\n  height: 28px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Tweet } from \"react-twitter-widgets\";\r\n\r\nconst TwitterReply = {\r\n  title: \"Tweet\",\r\n  component: Tweet\r\n};\r\n\r\nexport const Basic = () => <Tweet tweetId=\"1413684299069419527\" />;\r\n\r\nexport default TwitterReply;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Basic } from './twitterReplyWidget';\r\n\r\n\r\nconst TrendingBar = () => {\r\n  return (\r\n    <TrendingStyle>\r\n\r\n      <InputStyle>\r\n        <input type=\"text\" placeholder='Search Twitter' />\r\n      </InputStyle>\r\n\r\n      <Basic />\r\n\r\n      <Heading>\r\n        <h2>What's happening</h2>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n        <Trend>\r\n          <p>Cricket . LIVE</p>\r\n          <h4>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Exercitationem, unde?</h4>\r\n          <p>Trending with <span>#engvsindia</span></p>\r\n        </Trend>\r\n      </Heading>\r\n\r\n    </TrendingStyle>\r\n  );\r\n}\r\n\r\n// styled components\r\nconst TrendingStyle = styled.div`\r\n  min-width: 350px;\r\n  max-width: 350px;\r\n  padding: 0rem 1rem;\r\n  margin-left: 10px;\r\n`;\r\nconst InputStyle = styled.div`\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 0;\r\n  background: #fff;\r\n  margin-bottom: 20px;\r\n\r\n  input {\r\n    width: 100%;\r\n    background: rgba(231, 231, 231, 0.548);\r\n    border: none;\r\n    border-radius: 34px;\r\n    padding: 0.8rem 1rem;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    font-size: 15px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\nconst Heading = styled.div`\r\n  background: rgba(231, 231, 231, 0.288);\r\n  border-radius: 16px;\r\n  padding: 1rem;\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst Trend = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n\r\n  p {\r\n    font-size: 13px;\r\n    color: #3339;\r\n    span {\r\n      color: #1d9bf0;\r\n    }\r\n  }\r\n  h4 {\r\n    font-size: 15px;\r\n    margin: 5px 0px;\r\n  }\r\n`;\r\n\r\nexport default TrendingBar;","export default __webpack_public_path__ + \"static/media/loading.1ce3f3ff.svg\";","export default __webpack_public_path__ + \"static/media/background.ee316e0d.png\";","export default __webpack_public_path__ + \"static/media/twitterbig.a5b6e9be.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport BgSignup from \"../assets/background.png\";\r\nimport TwitterBig from \"../assets/twitterbig.svg\";\r\nimport TwitterIcon from \"../assets/twitter.png\";\r\nimport { signInWithGoogle } from \"../firebase/firebase\";\r\nimport { auth, createUserProfileDocument } from \"../firebase/firebase\";\r\n\r\nconst SignUp = () => {\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"Signup / Twitter\";\r\n  }, []);\r\n\r\n  // handle Submit\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n      await createUserProfileDocument(user, {displayName});\r\n      \r\n      setDisplayName('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  // handle Change\r\n  const handleNameChange = event => {\r\n    const { value } = event.target;\r\n    setDisplayName(value);\r\n  }\r\n  const handleEmailChange = event => {\r\n    const { value } = event.target;\r\n    setEmail(value);\r\n  }\r\n  const handlePasswordChange = event => {\r\n    const { value } = event.target;\r\n    setPassword(value);\r\n  }\r\n  const handleConfirmChange = event => {\r\n    const { value } = event.target;\r\n    setConfirmPassword(value);\r\n  }\r\n\r\n\r\n  return (\r\n    <SignUpStyle>\r\n      <SignupLeft>\r\n        <img className=\"bg\" src={BgSignup} alt=\"signup background\" />\r\n        <img className=\"logo\" src={TwitterBig} alt=\"twitter\" />\r\n      </SignupLeft>\r\n\r\n      <SignupRight>\r\n        <img src={TwitterIcon} alt=\"twitter\" />\r\n        <h1>Happening Now</h1>\r\n        <h2>Join Twitter today.</h2>\r\n\r\n        <FormStyle onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            value={displayName}\r\n            onChange={handleNameChange}\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter Full Name\"\r\n            required\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter Email Address\"\r\n            required\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            required\r\n          />\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            value={confirmPassword}\r\n            onChange={handleConfirmChange}\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n          />\r\n          <button type=\"submit\">SignUp</button>\r\n        </FormStyle>\r\n\r\n        <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n      </SignupRight>\r\n    </SignUpStyle>\r\n  );\r\n};\r\n\r\n// styled components\r\nconst SignUpStyle = styled.div`\r\n  display: flex;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow-x: hidden;\r\n`;\r\nconst SignupLeft = styled.div`\r\n  width: 55vw;\r\n  position: relative;\r\n\r\n  img.bg {\r\n    width: 100%;\r\n    height: 100vh;\r\n    object-fit: cover;\r\n  }\r\n  img.logo {\r\n    width: 40%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\nconst SignupRight = styled.div`\r\n  padding: 2rem;\r\n  height: 100vh;\r\n\r\n  img {\r\n    width: 40px;\r\n  }\r\n  h1 {\r\n    font-size: 4rem;\r\n    margin: 20px 0;\r\n  }\r\n  h2 {\r\n    font-size: 2rem;\r\n  }\r\n  button {\r\n    width: 150px;\r\n    height: 40px;\r\n    background: #4285f4;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 34px;\r\n    cursor: pointer;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: #5f98f5;\r\n    }\r\n  }\r\n`;\r\nconst FormStyle = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n\r\n  input {\r\n    width: 60%;\r\n    height: 2.5rem;\r\n    font-size: 1rem;\r\n    padding: 1.3rem 0.5rem;\r\n    margin: 10px 0;\r\n    border: 1px solid #3333;\r\n    border-radius: 34px;\r\n\r\n    &:focus {\r\n      border: 2px solid #000;\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    width: 80px;\r\n    height: 40px;\r\n    background: #000;\r\n    color: #fff;\r\n    border: none;\r\n    margin: 1rem 0;\r\n    border-radius: 34px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #313131;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Route, Switch, useLocation, Redirect } from \"react-router-dom\";\nimport { GlobalStyles } from \"./styles/globalstyles\";\nimport NavBar from \"./components/navbar\";\nimport TrendingBar from \"./components/trendingbar\";\nimport LoadingAnim from \"./assets/loading.svg\";\n\nimport { auth, createUserProfileDocument } from \"./firebase/firebase\";\n\nimport SignUp from \"./pages/signuppage\";\nconst HomePage = React.lazy(() => import(\"./pages/homepage\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/profilepage\"));\nconst ExplorePage = React.lazy(() => import(\"./pages/explorepage\"));\nconst NotificationPage = React.lazy(() => import(\"./pages/notificationpage\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/messagespage\"));\nconst BookmarkPage = React.lazy(() => import(\"./pages/bookmarkpage\"));\nconst ListPage = React.lazy(() => import(\"./pages/listspage\"));\nconst WelcomePage = React.lazy(() => import(\"./pages/welcomepage\"));\n\nfunction App() {\n  // loading screen\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  }, []);\n\n  // google signin states\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth);\n        (await userRef).onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }, []);\n\n  // hide elements on signup page\n  let location = useLocation();\n  if (location.pathname === \"/\") {\n    return isLoading ? (\n      <ImageStyle>\n        <img src={LoadingAnim} alt=\"Loading...\" />\n      </ImageStyle>\n    ) : (\n      <div>\n        <GlobalStyles />\n        <Route exact path=\"/\">\n          {currentUser ? <Redirect to=\"/home\" /> : <SignUp />}\n        </Route>\n      </div>\n    );\n  }\n\n  return isLoading ? (\n    <ImageStyle>\n      {\" \"}\n      <img src={LoadingAnim} alt=\"Loading...\" />{\" \"}\n    </ImageStyle>\n  ) : (\n    <AppStyle>\n      <GlobalStyles />\n      <NavBar currentUser={currentUser} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route path=\"/twitter-clone\" component={WelcomePage} />\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/explore\" component={ExplorePage} />\n          <Route path=\"/notifications\" component={NotificationPage} />\n          <Route path=\"/messages\" component={MessagesPage} />\n          <Route path=\"/bookmarks\" component={BookmarkPage} />\n          <Route path=\"/lists\" component={ListPage} />\n        </Switch>\n      </Suspense>\n      <TrendingBar />\n    </AppStyle>\n  );\n}\n\n// styled components\nconst AppStyle = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst ImageStyle = styled.div`\n  width: 90vw;\n  height: 90vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorkerRegistration';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}